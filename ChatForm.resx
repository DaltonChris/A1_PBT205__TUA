<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="AttachButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        3QAAAN0BcFOiBwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAATdSURBVFhHtdZf
        TFtVHAfw6zYFJ+qmMGGAVGQPJvJmthmjMfGpS4TJ3J8gxk3n3JwuGoIyGH/EDrOBY8AG5UG3B5z/ZjIZ
        f3Qj0wJqM/5sraGFC0ihtPKnZaWlQCnj6zkHut62d0Db+fBr0vNwP+eec8/5fTkAK6qEMoQ8XTEnjT8z
        I5eUTiskpyf5uFN225PFVltskYWPOTGuiC00y2OOj0oTynpCxJ4hVqKDwnqmClEErow/67Q+Ve4AwSE5
        bUfcqUkQHAQHwRHzhRnRx8ewUTaCqIJha2S+sTI8Sxcl9kxhiQ7SkpxD6Kaq2zKC2wkOP3AQHJF5Q3gi
        Z9AecUwnk+T3h4oZtEQHJWcRmSCfVxIcQeDYkD2AiKx+hGf2KSMy+iPFLJ+B+CokElwfKB5bYEB0ngeO
        8E968HgGr1//sTbR2/P4s/jmfuOxsmEUNlqhMjjgcN7GtGMObQNTOFozig2fMhyPpXeBTEAfkdHpsRJu
        nOx5IMv+fPkY1MZZzM/PszJaZjE84YDT6YRjxoGmbgsScniCa7Duo06sP6JWcnvd38SdCSx+cH7jxok5
        Bjf3TWPLl4Y7y/5CsQ4t/AQmbXZc+HOE4euO/I1HP1DhkfdvyDwmsHjU/PrahfjFm5OIyhnAc0V6FDea
        cfAbIzYe7UF0ZjdU/4zDbBrHtpLuBfzwDYQd6rCvPdDGjiibAMHpOQ8Kz7psgmN2YdmnpqbRrL3Fln3/
        uX6MDI8i94dehj98qANh77Uh7N3WSjYBesMRfMWXzFaCG7zwY7UmtucW2wyyLv0LhWYcExYrXjzBY6tM
        C8OQEecbe934get4aL/Syn1YH0LfXhoMnlfvxpMqBhGXzeM6b4aJLHtirgZJJVro+gdR+KNWiGPt23+R
        apFyi3f7sviWMl/8swazD67oNLE9/7ZZz/Zc3tALvrsPqaU3PfAH9/2B0L3Nco7gpLEsjw9ZVo5f6TAg
        Jl2NtAoNw6+0aBBx2At/qxmhaU0KbqGr+Yfniyy7N77njAZdXX1Qq7R4Kb/NF3+zCSFv/M5ziy1VFN8s
        govtuTe+u9yNpxS13w3HA6nXbBzBaT8XxfVeeG7dPcVx/55GG0dwGiaWxYVH7W74Lv9wrNl9lecIrhDi
        tLH0mpweePaK8E7/8F1XsWbnrwqOxigX7mqpadUmXGi3MTyzZuz/wrE6pUHO0QwnxIVh4pUzBtJal8Z3
        lgWI72jA6u31UnIV94QQnGY4nyTzfbuF3e0FtcOsn5f8YvTBtdrA8FWv1Vk5KbmKaUMgeKVIjIJqYJI1
        lmcLelhjicrQ4GSNjuGvB4djVXLdQjOiPzS90gDpHaNqVbdYP9/3tc6jn+8oDQ6/b3utnUv5yd2OadH0
        6pXhcLBaz7qaum8M73zVi80Fnfj8Ih8sDu7VGs9AQotGZ4IrXfhChtPgvMLA+jltqbSr0bu9tV2L5JMB
        4kmXldzLv/lGMlo0OtP06sJdy55a0cW62nfXupFbrcam9NYA8Z/13LY68VDqKhqdaXr1yHDCJOPdUv3B
        ky8tHctdRaMzTa/3DifL7vXmrvIZcBWNzjS90gAZBG6nH5xwz71LdFBYNL3SAElwqx+4lZ5z11FbqkQH
        xYoGSJrhaIyiSYbgPMFtBLfRrkZwBb3b2fVKbjixZ/gWuP8AotOaqJYRQowAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="folderBrowserDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>199, 17</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAA47AAAOOwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAADgAAABsAAAAbAAAADwAAAAIAAAAAAAAAAAAA
        AAAAAAAPAAAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAPgAAAJEAAADHAAAA3gAAAN4AAADJAAAAmQAA
        AEkAAAAgAAAASAAAALsAAACoAAAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFwAAAI8AAADvAAAA/wAAAPcAAADnAAAA5wAA
        APYAAAD/AAAA9gAAAOUAAAD1AAAA/wAAAOEAAAAeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAACtAAAA/wAAAOkAAACQAAAAQwAA
        ACQAAAAkAAAAPgAAAIQAAADMAAAA4QAAANgAAAD5AAAA4QAAAB4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAkAAAAP8AAADVAAAARAAA
        AAIAAAAAAAAAAAAAAAAAAAAAAAAAAQAAABIAAAAcAAAAMQAAAOQAAADjAAAAHgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8AAADvAAAA6wAA
        AEYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeAAAA4wAAAOMAAAAeAAAAAAAA
        AAAAAAAAAAAADgAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAEgAAABsAAAAaAAAAlwAA
        AP8AAACRAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4AAADjAAAA4wAA
        AB4AAAAAAAAAAAAAAA4AAACmAAAAuAAAADsAAAAFAAAAAAAAAAUAAAAuAAAAdwAAALAAAADNAAAA3AAA
        AN0AAADzAAAA/wAAAJMAAAAjAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHgAA
        AOMAAADjAAAAHgAAAAAAAAAAAAAAHgAAAOEAAAD/AAAA6AAAAKwAAACPAAAAqgAAAOUAAAD+AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/QAAAN4AAACAAAAAGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAeAAAA4wAAAOMAAAAeAAAAAAAAAAAAAAAeAAAA4QAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP0AAADAAAAAMwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAACQAAADnAAAA3gAAABsAAAAAAAAAAAAAAB4AAADhAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADSAAAANAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAARAAAAPgAAADHAAAADgAAAAAAAAAAAAAAHgAAAOEAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAC/AAAAGQAAAAAAAAAAAAAAAAAAAAIAAACQAAAA/wAAAJAAAAAAAAAAAAAAAAAAAAAeAAAA4QAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP4AAACAAAAAAAAAAAAAAAAAAAAARQAAAOoAAADuAAAAPgAAAAAAAAAAAAAAAAAA
        AB4AAADhAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAANwAAAAkAAAAAAAAAEUAAADVAAAA/wAAAI8AAAAFAAAAAAAA
        AAAAAAAAAAAAHgAAAOEAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/QAAAJIAAACQAAAA6gAAAP8AAACtAAAAFwAA
        AAAAAAAAAAAAAAAAAAAAAAAeAAAA4QAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAP8AAADvAAAAkAAA
        ABcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4AAADhAAAA/wAAAP8AAAD/AAAA/wAAAP8AAADwAAAA8AAA
        AP8AAAD/AAAA8AAAAPAAAAD/AAAA/wAAAPAAAADwAAAA/wAAAP8AAAD/AAAA/wAAAP8AAADyAAAAlwAA
        AD4AAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHgAAAOEAAAD/AAAA/wAAAP8AAAD/AAAA8QAA
        AFMAAABTAAAA8gAAAPIAAABTAAAAUwAAAPIAAADyAAAAUwAAAFMAAADxAAAA/wAAAP8AAAD/AAAA/wAA
        ANsAAAAbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbAAAA3AAAAP8AAAD/AAAA/wAA
        AP8AAADxAAAAUwAAAFMAAADyAAAA8gAAAFMAAABTAAAA8gAAAPIAAABTAAAAUwAAAPEAAAD/AAAA/wAA
        AP8AAAD/AAAA2wAAABsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIAAADMAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAADwAAAA8AAAAP8AAAD/AAAA8AAAAPAAAAD/AAAA/wAAAPAAAADwAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAADNAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAA
        AKkAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAKoAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAbAAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAbQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAlAAAA3QAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAN4AAAAnAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD+AAAAgQAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkAAAC/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAL8AAAAZAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMAAADRAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADQAAAAMgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ADMAAADAAAAA/QAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD9AAAAwAAA
        ADIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAABkAAACBAAAA3wAAAP0AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD+AAAA4AAA
        AIEAAAAZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAmAAAAbAAAAKoAAADNAAAA3AAAANwAAADOAAAArAAA
        AG4AAAAnAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAABIAAAAbAAAAGwAA
        ABIAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////4HP//4AB//8AAf/+AAH//A8B//w/4c/AP+GCAB/hgAAP4YAA
        B+GAAAPhgAABw4AAAcOAAACDgAAAB4AAAA+AAAAfgAAAf4AAAH+AAAB/gAAAf8AAAP/AAAD/4AAA/+AA
        Af/wAAP/+AAH//wAD//+AB///8D///////8=
</value>
  </data>
</root>